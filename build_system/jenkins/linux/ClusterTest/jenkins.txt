# Get hash for last commit
ARCH=`uname`

# Get list of builds tested
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done' $WORKSPACE/awstest_done

# Get build to use for test
scp data:/Volumes/big/www/jenkins/status/'build_'$ARCH'_done' awstest_tmpfile
TAG=`sed -n $'$p' awstest_tmpfile`

# What if TAG is empty
if [ "$TAG" == "" ]; then
echo "No build to test on AWS. Quitting"
exit
fi

#- Quit if test is in progress (not just for this tag)
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_inprogress' awstest_tmpfile
count=$(echo `grep -i $TAG awstest_tmpfile|wc -l`)
if [ "$count" != 0 ] ; then
echo "Test on AWS in progress for this build. Quitting"
exit
else
echo "Test on AWS not in progress for this build. Continuing ..."
fi

#- Quit if test is done for this tag
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done' awstest_tmpfile
count=$(echo `grep -i $TAG awstest_tmpfile|wc -l`)
if [ "$count" != 0 ] ; then
echo "Test on AWS done for this build. Quitting"
exit
else
echo "Test on AWS not done for this build. Continuing ..."
fi


# If local, use local build
## If not local, download and extract that build
# if [ $LOCAL_BUILD_TEST -eq 1 ]; then
BUILD=$HOME/Jenkins/Builds/$TAG'_'$ARCH'.tgz'
if [ -f "$BUILD" ]; then
echo "Using local build ..."
BUILD=$HOME/Jenkins/Builds/$TAG/nta/eng
export PYTHONPATH=$BUILD/lib/python2.6/site-packages:$BUILD/build_system
else
mkdir -p $HOME/Jenkins/Builds/$TAG
scp data:/Volumes/big/www/jenkins/builds/$TAG'_'$ARCH'.tgz' $HOME/Jenkins/Builds/$TAG'_'$ARCH'.tgz'
cd $HOME/Jenkins/Builds/$TAG
tar -zxf ../$TAG'_'$ARCH'.tgz'
cd $WORKSPACE
BUILD=$HOME/Jenkins/Builds/$TAG
export PYTHONPATH=$BUILD/eng/lib/python2.6/site-packages:$WORKSPACE/build_system
fi

# Set paths and environment
export AWS_CREDENTIAL_FILE=/home/buildaccount/.aws/AWS_CRED
export AWS_ACCESS_KEY_ID=$(cat $AWS_CREDENTIAL_FILE | head -1 | awk -F= '{print $2}')
export AWS_SECRET_ACCESS_KEY_ID=$(cat $AWS_CREDENTIAL_FILE | head -2 | tail -1 | awk -F= '{print $2}')


# Mark test in progress
# ssh data mkdir -p /Volumes/big/www/jenkins/$TAG
# ssh data touch /Volumes/big/www/jenkins/$TAG/'awstest_'$ARCH'.inprogress'
# scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_inprogress' awstest_tmpfile
# echo $TAG >> awstest_tmpfile
# scp awstest_tmpfile data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_inprogress'


#- Run test
echo "Running cluster tests ..."
cd $WORKSPACE/../scripts
test=(`python2 verify_aws_test.py`)
test=$?

# Remove from awstest_inprogress list
# echo "Removing from awstest_inprogress list"
# scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_inprogress' awstest_tmpfile
# touch awstest_tmpfile2
# sed "/$TAG/d" awstest_tmpfile > awstest_tmpfile2
# scp awstest_tmpfile2 data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_inprogress'


# Add to awstest_done list
TESTTAG=`sed -n $'$p' $WORKSPACE/latest`
echo "Updating awstest_done list"
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done' .
echo $TESTTAG >> 'awstest_'$ARCH'_done'
scp 'awstest_'$ARCH'_done' data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done'

# Upload log to data
echo "Uploading log data"
scp $WORKSPACE/$TESTTAG.out data:/Volumes/big/www/jenkins/$TESTTAG/ClusterTestResults.txt

# Mark test as done
echo "Marking test on AWS as done"
ssh data touch /Volumes/big/www/jenkins/$TESTTAG/'awstest_'$ARCH'.done'

# Add to awstest_done list
echo "Updating awstest_done list"
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done' .
echo $TESTTAG >> 'awstest_'$ARCH'_done'
scp 'awstest_'$ARCH'_done' data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_done'

# If test failed, add to test_fail list
echo "Test result:"
count=$(echo `grep FAILED $WORKSPACE/$TESTTAG.out|wc -l`)
if [ "$count" != 0 ] ; then
echo "Tests failed. Updating test_fail list"
scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_fail' .
echo $TESTTAG >> 'awstest_'$ARCH'_fail'
scp 'awstest_'$ARCH'_fail' data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_fail'
exit 1
fi

# If test failed, add to test_fail list
# echo "Test result:"
# count=$(echo `grep FAILED $WORKSPACE/$TAG.log|wc -l`)
# if [ "$count" != 0 ] ; then
# echo "Tests failed. Updating test_fail list"
# scp data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_fail' .
# echo $TAG >> 'awstest_'$ARCH'_fail'
# scp 'awstest_'$ARCH'_fail' data:/Volumes/big/www/jenkins/status/'awstest_'$ARCH'_fail'
# exit 1
# fi

