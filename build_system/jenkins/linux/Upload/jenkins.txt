# Get hash for last commit
ARCH=`uname`

# Get which build to test
scp data:/Volumes/big/www/jenkins/status/'build_'$ARCH'_done' upload_tmpfile
TAG=`sed -n $'$p' upload_tmpfile`

# What if TAG is empty
if [ "$TAG" == "" ]; then
echo "No build to upload. Quitting"
exit
fi

# Quit if upload is done for this TAG
scp data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_done' upload_tmpfile
count=$(echo `grep -i $TAG upload_tmpfile|wc -l`)
if [ "$count" != 0 ] ; then
echo "Upload done for this build. Quitting"
exit
else
echo "Upload not done for this build. Continuing ..."
fi

# Quit if upload is in progress for this TAG
scp data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_inprogress' upload_tmpfile
count=$(echo `grep -i $TAG upload_tmpfile|wc -l`)
if [ "$count" != 0 ] ; then
echo "Upload in progress for this build. Quitting"
exit
else
echo "Upload not in progress for this build. Continuing ..."
fi

# Mark upload in progress
#ssh data mkdir -p /Volumes/big/www/jenkins/$TAG
ssh data touch /Volumes/big/www/jenkins/$TAG/'upload_'$ARCH'.inprogress'
scp data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_inprogress' upload_tmpfile
echo $TAG >> upload_tmpfile
scp upload_tmpfile data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_inprogress'

# If local, use local build
## If not local, download and extract that build
# if [ $LOCAL_BUILD_TEST -eq 1 ]; then
BUILD=$HOME/Jenkins/Builds/$TAG'_'$ARCH'.tgz'
if [ -f "$BUILD" ]; then
echo "Using local build ..."
BUILD=$HOME/Jenkins/Builds/$TAG/nta/eng
export PYTHONPATH=$BUILD/lib/python2.6/site-packages:$WORKSPACE/build_system
else
mkdir -p $HOME/Jenkins/Builds/$TAG
scp data:/Volumes/big/www/jenkins/builds/$TAG'_'$ARCH'.tgz' $HOME/Jenkins/Builds/$TAG'_'$ARCH'.tgz'
cd $HOME/Jenkins/Builds/$TAG
tar -zxf ../$TAG'_'$ARCH'.tgz'
cd $WORKSPACE
BUILD=$HOME/Jenkins/Builds/$TAG
export PYTHONPATH=$BUILD/eng/lib/python2.6/site-packages:$WORKSPACE/build_system
fi

# Set paths and environment
export AWS_CREDENTIAL_FILE=/home/buildaccount/.aws/AWS_CRED
export AWS_ACCESS_KEY_ID=$(cat $AWS_CREDENTIAL_FILE | head -1 | awk -F= '{print $2}')
export AWS_SECRET_ACCESS_KEY_ID=$(cat $AWS_CREDENTIAL_FILE | head -2 | tail -1 | awk -F= '{print $2}')

# Upload build
cd $HOME/Jenkins/Builds/
test=(`python2 $WORKSPACE/../scripts/upload_build.py --filename $TAG'_'$ARCH'.tgz'`)

# Upload build number as latest
cd $HOME/Jenkins/Builds/
echo $TAG > 'latest'
upload=(`python2 $WORKSPACE/../scripts/upload_build.py --filename 'latest'`)

# Update builds to test file
cd $HOME/Jenkins/Builds/
touch builds_to_test
update=(`python2 $WORKSPACE/../scripts/update_builds_to_test.py --tag $TAG`)

# Mark upload as done
echo "Marking upload as done"
ssh data touch /Volumes/big/www/jenkins/$TAG/'upload_'$ARCH'.done'
ssh data rm /Volumes/big/www/jenkins/$TAG/'upload_'$ARCH'.inprogress'

# Add to upload_done list
echo "Updating upload_done list"
scp data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_done' .
echo $TAG >> 'upload_'$ARCH'_done'
scp 'upload_'$ARCH'_done' data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_done'

# Remove from upload_inprogress list
echo "Removing from upload_inprogress list"
scp data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_inprogress' upload_tmpfile
touch upload_tmpfile2
sed "/$TAG/d" upload_tmpfile > upload_tmpfile2
scp upload_tmpfile2 data:/Volumes/big/www/jenkins/status/'upload_'$ARCH'_inprogress'
